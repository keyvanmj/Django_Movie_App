# Generated by Django 3.2.7 on 2021-12-25 13:15

import Movie_app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Movie_Category', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=140)),
                ('plot', models.TextField()),
                ('release_date', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.IntegerField(choices=[(0, 'NR - NOT RATED'), (1, 'G - General Audiences'), (2, 'PG - Parental Guidancesuggested'), (3, 'R - Restricted')], default=0)),
                ('movie_length', models.CharField(blank=True, max_length=50, null=True)),
                ('imdb_rating', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('trailer', embed_video.fields.EmbedVideoField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=100, null=True)),
                ('subtitle', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('background_image', models.ImageField(blank=True, null=True, upload_to='movies/background')),
                ('background_image_link', models.CharField(blank=True, max_length=1000, null=True)),
                ('thumbnail_link', models.CharField(blank=True, max_length=1000, null=True)),
                ('screen_shot', models.ImageField(blank=True, null=True, upload_to='movies/screenshot')),
                ('screen_shot_link', models.CharField(blank=True, max_length=1000, null=True)),
                ('types', models.CharField(blank=True, max_length=100, null=True)),
                ('premium', models.BooleanField(default=False)),
                ('link_4k', models.CharField(blank=True, max_length=1000, null=True)),
                ('link_1920', models.CharField(blank=True, max_length=1000, null=True)),
                ('link_720', models.CharField(blank=True, max_length=1000, null=True)),
                ('size_4k', models.CharField(blank=True, max_length=1000, null=True)),
                ('size_1920', models.CharField(blank=True, max_length=1000, null=True)),
                ('size_720', models.CharField(blank=True, max_length=1000, null=True)),
                ('movie_link', models.TextField(blank=True, max_length=1000, null=True)),
                ('movie_online', models.TextField(blank=True, max_length=1000, null=True)),
                ('torrent_link_4k', models.CharField(blank=True, max_length=1000, null=True)),
                ('torrent_link_1920', models.CharField(blank=True, max_length=1000, null=True)),
                ('torrent_link_720', models.CharField(blank=True, max_length=1000, null=True)),
                ('torrent_file_link', models.FileField(blank=True, null=True, upload_to='torrent_movie')),
                ('tmv_db_id', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('genre', models.ManyToManyField(blank=True, to='Movie_Category.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='MovieImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded', models.DateTimeField(auto_created=True, null=True)),
                ('image', models.ImageField(upload_to=Movie_app.models.movie_directory_path_with_uuid)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Movie_app.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
